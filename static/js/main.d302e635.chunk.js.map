{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodsList","state","goods","props","isReversed","sortType","reset","setState","reverse","sortAlpabetically","Alphabetically","sortByLength","Length","this","goodsCopy","sort","g1","g2","localeCompare","length","className","map","good","type","onClick","React","Component","goodsFromServer","App","isListVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"sLAGKA,E,oGAAAA,O,mCAAAA,I,oBAAAA,M,KAeE,IAAMC,EAAb,4MACEC,MAAe,CACbC,MAAO,EAAKC,MAAMD,MAClBE,YAAY,EACZC,SAAU,MAJd,EAOEC,MAAQ,WACN,EAAKC,SAAS,CACZH,YAAY,EACZC,SAAU,QAVhB,EAcEG,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAhBzB,EAoBEK,kBAAoB,WAClB,EAAKF,SAAS,CAAEF,SAAUN,EAASW,kBArBvC,EAwBEC,aAAe,WACb,EAAKJ,SAAS,CAAEF,SAAUN,EAASa,UAzBvC,4CA4BE,WACE,MAIIC,KAAKZ,MAHPC,EADF,EACEA,MACAE,EAFF,EAEEA,WACAC,EAHF,EAGEA,SAGIS,EAAS,YAAOZ,GAmBtB,OAjBAY,EAAUC,MAAK,SAACC,EAAIC,GAClB,OAAQZ,GACN,KAAKN,EAASW,eACZ,OAAOM,EAAGE,cAAcD,GAE1B,KAAKlB,EAASa,OACZ,OAAOI,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITf,GACFU,EAAUN,UAIV,sBAAKY,UAAU,YAAf,UACE,6BACGN,EAAUO,KAAI,SAAAC,GAAI,OACjB,6BACGA,GADMA,QAKb,sBAAKF,UAAU,sBAAf,UACE,wBACEG,KAAK,SACLC,QAASX,KAAKL,QAFhB,qBAMA,wBACEe,KAAK,SACLC,QAASX,KAAKJ,kBAFhB,iCAMA,wBACEc,KAAK,SACLC,QAASX,KAAKF,aAFhB,4BAMA,wBACEY,KAAK,SACLC,QAASX,KAAKP,MAFhB,6BAlFV,GAA+BmB,IAAMC,WCd/BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACE3B,MAAe,CACb4B,eAAe,GAFnB,EAKEC,SAAW,WACT,EAAKvB,SAAS,CAAEsB,eAAe,KANnC,4CASE,WACE,IAAQA,EAAkBhB,KAAKZ,MAAvB4B,cAER,OACE,sBAAKT,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACCS,EACG,cAAC,EAAD,CAAW3B,MAAOyB,IAElB,wBACEJ,KAAK,SACLH,UAAU,oBACVI,QAASX,KAAKiB,SAHhB,0BAlBZ,GAAyBL,IAAMC,WClB/BK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d302e635.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.css';\n\nenum SortType {\n  Alphabetically,\n  Length,\n}\n\ntype State = {\n  goods: string[];\n  isReversed: boolean;\n  sortType: SortType | null;\n};\n\ntype Props = {\n  goods: string[];\n};\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: State = {\n    goods: this.props.goods,\n    isReversed: false,\n    sortType: null,\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: null,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlpabetically = () => {\n    this.setState({ sortType: SortType.Alphabetically });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.Length });\n  };\n\n  render() {\n    const {\n      goods,\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const goodsCopy = [...goods];\n\n    goodsCopy.sort((g1, g2) => {\n      switch (sortType) {\n        case SortType.Alphabetically:\n          return g1.localeCompare(g2);\n\n        case SortType.Length:\n          return g1.length - g2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      goodsCopy.reverse();\n    }\n\n    return (\n      <div className=\"GoodsList\">\n        <ul>\n          {goodsCopy.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n        <div className=\"GoodsList__controls\">\n          <button\n            type=\"button\"\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.sortAlpabetically}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isListVisible: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isListVisible: false,\n  };\n\n  showList = () => {\n    this.setState({ isListVisible: true });\n  };\n\n  render() {\n    const { isListVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        {isListVisible\n          ? <GoodsList goods={goodsFromServer} />\n          : (\n            <button\n              type=\"button\"\n              className=\"App__start-button\"\n              onClick={this.showList}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}