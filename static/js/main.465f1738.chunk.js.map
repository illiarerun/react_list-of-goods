{"version":3,"sources":["components/GoodsList.tsx","components/Button.tsx","App.tsx","index.tsx"],"names":["SortType","Button","props","name","clickHandler","type","onClick","GoodsList","state","goods","isReversed","sortType","minLength","reset","setState","reverse","sort","getVisibleGoods","visibleGoods","filter","good","length","Alphabetically","g1","g2","localeCompare","Length","getGoodsLengths","map","_good","i","handleLengthChange","event","target","value","this","goodsLengths","className","htmlFor","id","onChange","goodLength","React","Component","goodsFromServer","App","isListVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"sLAIKA,E,kFCGQC,EAA0B,SAACC,GACtC,IAAQC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,aAEd,OACE,wBACEC,KAAK,SACLC,QAASF,EAFX,SAIGD,K,gBDXFH,O,mCAAAA,I,oBAAAA,M,KAgBE,IAAMO,EAAb,4MACEC,MAAe,CACbC,MAAO,EAAKP,MAAMO,MAClBC,YAAY,EACZC,SAAU,KACVC,UAAW,GALf,EAQEC,MAAQ,WACN,EAAKC,SAAS,CACZJ,YAAY,EACZC,SAAU,QAXhB,EAeEI,QAAU,WACR,EAAKD,UAAS,SAAAN,GAAK,MAAK,CACtBE,YAAaF,EAAME,gBAjBzB,EAqBEM,KAAO,SAACL,GACN,EAAKG,SAAS,CAAEH,cAtBpB,EAyBEM,gBAAkB,WAChB,MAEI,EAAKT,MADPC,EADF,EACEA,MAAOE,EADT,EACSA,SAAUD,EADnB,EACmBA,WAAYE,EAD/B,EAC+BA,UAE3BM,EAAY,YAAOT,GAQvB,OANIG,IACFM,EAAeA,EAAaC,QAAO,SAAAC,GAAI,OACrCA,EAAKC,QAAUT,MAIXD,GACN,KAAKX,EAASsB,eACZJ,EAAaF,MAAK,SAACO,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MAEF,KAAKxB,EAAS0B,OACZR,EAAaF,MAAK,SAACO,EAAIC,GAAL,OAAYD,EAAGF,OAASG,EAAGH,UAUjD,OAJIX,GACFQ,EAAaH,UAGRG,GArDX,EAwDES,gBAAkB,WAGhB,OAFkB,EAAKnB,MAAfC,MAEKmB,KAAI,SAACC,EAAOC,GAAR,OAAcA,EAAI,MA3DvC,EA8DEC,mBAAqB,SAACC,GACpB,EAAKlB,SAAS,CAAEF,WAAYoB,EAAMC,OAAOC,SA/D7C,4CAkEE,WAAU,IAAD,OACCtB,EAAcuB,KAAK3B,MAAnBI,UACFM,EAAeiB,KAAKlB,kBACpBmB,EAAeD,KAAKR,kBAE1B,OACE,sBAAKU,UAAU,YAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,cAAC,EAAD,CACElC,KAAK,UACLC,aAAc,WACZ,EAAKW,aAGT,cAAC,EAAD,CACEZ,KAAK,sBACLC,aAAc,WACZ,EAAKY,KAAKhB,EAASsB,mBAGvB,cAAC,EAAD,CACEnB,KAAK,iBACLC,aAAc,WACZ,EAAKY,KAAKhB,EAAS0B,WAGvB,cAAC,EAAD,CACEvB,KAAK,QACLC,aAAc,WACZ,EAAKS,WAGT,wBAAOyB,QAAQ,cAAcD,UAAU,4BAAvC,mCAEE,wBACElC,KAAK,cACLoC,GAAG,cACHL,MAAOtB,EACP4B,SAAUL,KAAKJ,mBAJjB,SAMGK,EAAaR,KAAI,SAAAa,GAAU,OAC1B,wBAAyBP,MAAOO,EAAhC,SACGA,GADUA,cAOrB,6BACGvB,EAAaU,KAAI,SAAAR,GAAI,OACpB,6BACGA,GADMA,eApHrB,GAA+BsB,IAAMC,WEhB/BC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACErC,MAAe,CACbsC,eAAe,GAFnB,EAKEC,SAAW,WACT,EAAKjC,SAAS,CAAEgC,eAAe,KANnC,4CASE,WACE,IAAQA,EAAkBX,KAAK3B,MAAvBsC,cAER,OACE,sBAAKT,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBACCS,EACG,cAAC,EAAD,CAAWrC,MAAOmC,IAElB,wBACEvC,KAAK,SACLgC,UAAU,oBACV/B,QAAS6B,KAAKY,SAHhB,0BAlBZ,GAAyBL,IAAMC,WClB/BK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.465f1738.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from './Button';\nimport './GoodsList.css';\n\nenum SortType {\n  Alphabetically,\n  Length,\n}\n\ntype State = {\n  goods: string[];\n  isReversed: boolean;\n  sortType: SortType | null;\n  minLength: number;\n};\n\ntype Props = {\n  goods: string[];\n};\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: State = {\n    goods: this.props.goods,\n    isReversed: false,\n    sortType: null,\n    minLength: 1,\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: null,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sort = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  getVisibleGoods = () => {\n    const {\n      goods, sortType, isReversed, minLength,\n    } = this.state;\n    let visibleGoods = [...goods];\n\n    if (minLength) {\n      visibleGoods = visibleGoods.filter(good => (\n        good.length >= minLength\n      ));\n    }\n\n    switch (sortType) {\n      case SortType.Alphabetically:\n        visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n        break;\n\n      case SortType.Length:\n        visibleGoods.sort((g1, g2) => g1.length - g2.length);\n        break;\n\n      default:\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  getGoodsLengths = () => {\n    const { goods } = this.state;\n\n    return goods.map((_good, i) => i + 1);\n  };\n\n  handleLengthChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ minLength: +event.target.value });\n  };\n\n  render() {\n    const { minLength } = this.state;\n    const visibleGoods = this.getVisibleGoods();\n    const goodsLengths = this.getGoodsLengths();\n\n    return (\n      <div className=\"GoodsList\">\n        <div className=\"GoodsList__controls\">\n          <Button\n            name=\"Reverse\"\n            clickHandler={() => {\n              this.reverse();\n            }}\n          />\n          <Button\n            name=\"Sort alphabetically\"\n            clickHandler={() => {\n              this.sort(SortType.Alphabetically);\n            }}\n          />\n          <Button\n            name=\"Sort by length\"\n            clickHandler={() => {\n              this.sort(SortType.Length);\n            }}\n          />\n          <Button\n            name=\"Reset\"\n            clickHandler={() => {\n              this.reset();\n            }}\n          />\n          <label htmlFor=\"goodsLength\" className=\"GoodsList__length-control\">\n            Choose min good length\n            <select\n              name=\"goodsLength\"\n              id=\"goodsLength\"\n              value={minLength}\n              onChange={this.handleLengthChange}\n            >\n              {goodsLengths.map(goodLength => (\n                <option key={goodLength} value={goodLength}>\n                  {goodLength}\n                </option>\n              ))}\n            </select>\n          </label>\n        </div>\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  name: string;\n  clickHandler: () => void;\n};\n\nexport const Button: React.FC<Props> = (props) => {\n  const { name, clickHandler } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={clickHandler}\n    >\n      {name}\n    </button>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isListVisible: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isListVisible: false,\n  };\n\n  showList = () => {\n    this.setState({ isListVisible: true });\n  };\n\n  render() {\n    const { isListVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">Goods</h1>\n        {isListVisible\n          ? <GoodsList goods={goodsFromServer} />\n          : (\n            <button\n              type=\"button\"\n              className=\"App__start-button\"\n              onClick={this.showList}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}